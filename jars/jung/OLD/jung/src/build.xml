<?xml version="1.0" encoding="UTF-8"?>
<project name="jcoverage.examples" default="main" basedir=".">
	<description>
    jcoverage copyright (C)2003 jcoverage ltd. http://jcoverage.com/
    jcoverage is licensed under the GNU General Public License
    jcoverage licensing policy, http://jcoverage.com/license.html
    jcoverage comes with ABSOLUTELY NO WARRANTY
  </description>


	<!--
  	this version number is used in the HTML and to name the files
  -->
	<property name="version" value = "1.7.6"/>

	<!--
    all build artefacts are deposited under this directory.
  -->
	<property name="build.dir" value="${basedir}/build2"/>

	<!--
    all build artefacts are deposited under this directory.
  -->
	<property name="release.dir" value="${basedir}/release"/>

	<!--
  	Change this to the directory where your jcoverage jar is found.
  -->
	<property name="distdir" value="/Applications/eclipse/plugins/com.jcoverage_1.0.5"/>

	<!--
    classes generated by the javac compiler are deposited in this
    directory.
  -->
	<property name="build.classes.dir" value="${build.dir}/classes"/>

	<!--
    instrumented classes are deposited into this directory.
  -->
	<property name="build.instrumented.dir" value="${build.dir}/instrumented-classes"/>

	<!--
    coverage reports are deposited into this directory. For the
    HTML report, look at ${build.coverage.dir}/index.html. For the XML
    report look at ${build.coverage.dir}/coverage.xml.
  -->
	<property name="build.coverage.dir" value="${basedir}/coverage"/>

	<!--
    unit test reports from junit are deposited in this directory.
  -->
	<property name="build.reports.dir" value="${build.dir}/reports"/>

	<!--
    the root of a jcoverage distribution
  -->
	<property name="dist.dir" value="${distdir}"/>

	<!--
		this directory has all my .jars in it. I'll later just add
		lib.dir / * 
  -->
	<property name="lib.dir" value="${jardir}"/>

	<!--
    the source code for the examples can be found in this directory.
  -->
	<property name="src.dir" value="${basedir}"/>

	<property name="doc.dir" value="doc"/>

	<target name="main" depends="clean,init,javadoc,compile,instrument,test,coverage" description="clean build, instrument and unit test"/>

	<path id="alljars">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="jcoverage">
		<fileset dir="${dist.dir}">
			<include name="jcoverage.jar"/>
		</fileset>
	</path>

	<taskdef classpathref="jcoverage" resource="tasks.properties"/>

	<target name="clean" description="clean up build artefacts" unless="cleaned">
		<delete quiet="true">
			<fileset dir="${build.dir}"/>
			<fileset dir="${basedir}">
				<include name="jcoverage.ser"/>
				<include name="jcoverage.log"/>
			</fileset>
		</delete>
		<property name="cleaned" value="true"/>
	</target>

	<target name="init" description="create build directories" depends="clean" unless="initted">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<mkdir dir="${build.coverage.dir}"/>
		<mkdir dir="${build.instrumented.dir}"/>
		<mkdir dir="${build.reports.dir}"/>
		<property name="initted" value="true"/>
	</target>

	<target name="compile" description="compile all classes" depends="init" unless="compiled">
		<javac 
    	srcdir="${src.dir}" 
    	destdir="${build.classes.dir}" 
    	excludes="scratch/**"
    	failonerror="yes" 
    	debug="yes">
			<classpath refid="alljars"/>
		</javac>
		<property name="compiled" value="true" />
	</target>

	<target name="instrument" description="Add jcoverage instrumentation" depends="compile">
		<!--
      instrument the application classes, writing the instrumented
      classes into ${build.instrumented.dir}.
    -->
		<instrument todir="${build.instrumented.dir}">
			<!--
        Note that the following line causes instrument to ignore any
        source line containing a reference to log4j, for the purposes
        of coverage reporting.
      -->
			<ignore regex="org.apache.log4j.*"/>

			<fileset dir="${build.classes.dir}">
				<!--
          instrument all the application classes, but don't instrument
          the test classes.
        -->
				<include name="**/*.class"/>
				<exclude name="test/"/>
				<exclude name="samples/"/>
				<exclude name="scratch/"/>
			</fileset>
		</instrument>
	</target>

	<target name="test" description="Unit test the application">

		<junit fork="yes" dir="${basedir}" errorProperty="test.failed" failureProperty="test.failed" filtertrace="on">
			<!--
        note the classpath order, instrumented classes are before the
        original (uninstrumented) classes.
      -->
			<classpath location="${build.instrumented.dir}"/>
			<classpath location="${build.classes.dir}"/>

			<!--
        the instrumented classes reference classes used by the
        jcoverage runtime.
      -->
			<classpath refid="jcoverage"/>
			<classpath refid="alljars"/>
			<!--	  <formatter type="brief" usefile="false"/> -->
			<formatter type="xml"/>

			<test name="${testcase}" todir="${build.reports.dir}" if="testcase"/>

			<batchtest todir="${build.reports.dir}" unless="testcase">
				<fileset dir="${src.dir}">
					<include name="test/**/*Test*.java"/>
					<exclude name="scratch/"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="javadoc" description="generate documentation">
		<javadoc destdir="${doc.dir}" access="protected" source="1.4"
            use="true" notree="false" nonavbar="false" noindex="false"
            splitindex="true" author="true" version="true"
            nodeprecatedlist="false" nodeprecated="false"
            overview="overview.html" 
        		windowtitle="JUNG ${version} API"
        		additionalparam="-breakiterator">
			<classpath refid="alljars" />
			<doctitle>JUNG ${version}</doctitle>
			<fileset dir=".">
				<include name="**/*.java" />
				<exclude name="scratch/**" />
				<exclude name="test/**" />
			</fileset>
			<link href="http://java.sun.com/j2se/1.4.2/docs/api"/>
			<link href="http://dsd.lbl.gov/~hoschek/colt/api/"/>
			<link href="http://jakarta.apache.org/commons/collections/apidocs-COLLECTIONS_3_1/"/>
			<link href="http://xml.apache.org/xerces2-j/javadocs/api/"/>
		</javadoc>
		<!--      	
	<zip destfile="${release.dir}/jung-${version}-doc.zip"
      		 basedir = "${doc.dir}" />
      		 -->
	</target>

	<target name="coverage" description="HTML and XML coverage reports can be found in build/coverage">
		<report srcdir="${src.dir}" destdir="${build.coverage.dir}"/>
		<report srcdir="${src.dir}" destdir="${build.coverage.dir}" format="xml"/>

		<echo>
jcoverage reports have been generated.
The HTML report is ${build.coverage.dir}/index.html
The XML report is ${build.coverage.dir}/coverage.xml
    </echo>
	</target>

	<target name="jar" description="build JAR distro from compiled files" unless="jar" depends="compile">
		<jar destfile="jung-${version}.jar"
  		 basedir="${build.classes.dir}"
  		 index="true">
			<exclude name="scratch/**" />
			<exclude name="test/**" />
		</jar>
		<property name="jar" value="true" />
	</target>

	<target name="jar-src" description="build JAR with source from compiled files">
		<jar destfile="jung-${version}-src.jar"
  		 basedir="${basedir}"
  		 index="true">
			<include name="edu/**/*.java" />
			<include name="edu/**/*.class" />
			<include name="samples/**/*.java" />
			<include name="samples/**/*.class" />
			<include name="test/**/*.java" />
			<include name="test/**/*.class" />
		</jar>
		<property name="jar-src" value="true" />
	</target>

	<target name="release" description="build zip distro from compiled" depends="jar">
		<!-- move files to appropriate directories -->
		<delete dir="${release.dir}" />
		<mkdir dir="${release.dir}" />
		<mkdir dir="${release.dir}/lib" />
		<mkdir dir="${release.dir}/src" />
		<!-- <move file="jung-${version}-src.jar" todir="${release.dir}/lib" /> -->
		<!-- <move file="jung-${version}.jar" todir="${release.dir}/lib" /> -->
		<copy file="jung-${version}.jar" todir="${release.dir}/lib" />
		<copy verbose="true" todir="${release.dir}/src">
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
				<include name="**/*.html"/>
				<include name="samples/datasets/*"/>
				<include name="samples/images/*"/>
				<include name="build.xml"/>
				<exclude name="scratch/"/>
			</fileset>
		</copy>
		<!-- build zip from them -->
		<zip destfile="${release.dir}/jung-${version}.zip" basedir="${release.dir}" />
		<delete dir="${release.dir}/lib" />
		<delete dir="${release.dir}/src" />
		<move file="jung-${version}-src.jar" todir="${release.dir}" />
		<move file="jung-${version}.jar" todir="${release.dir}" />
		<delete dir="build2" />
	</target>

</project>

